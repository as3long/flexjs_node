/**
 * Generated by Apache Flex Cross-Compiler from com\as3long\node\utils\Debug.as
 * com.as3long.node.utils.Debug
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('com.as3long.node.utils.Debug');



/**
 * @constructor
 */
com.as3long.node.utils.Debug = function() {
};


/**
 * @export
 * @param {Object} obj
 */
com.as3long.node.utils.Debug.prototype.outObject = function(obj) {
  for (var /** @type {string} */ k in obj) {
    org.apache.flex.utils.Language.trace(k, obj[k]);
  }
};


/**
 * @private
 * @type {com.as3long.node.utils.Debug}
 */
com.as3long.node.utils.Debug._one;


/**
 * @export
 * @return {com.as3long.node.utils.Debug}
 */
com.as3long.node.utils.Debug.one = function() {
  if (!com.as3long.node.utils.Debug._one) {
    com.as3long.node.utils.Debug._one = new com.as3long.node.utils.Debug();
  }
  return com.as3long.node.utils.Debug._one;
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.as3long.node.utils.Debug.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'Debug', qName: 'com.as3long.node.utils.Debug'}] };


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('com.as3long.node.utils.Debug', com.as3long.node.utils.Debug);



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.as3long.node.utils.Debug.prototype.FLEXJS_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
      };
    },
    accessors: function () {
      return {
      };
    },
    methods: function () {
      return {
        'Debug': { type: '', declaredBy: 'com.as3long.node.utils.Debug'},
        'outObject': { type: 'void', declaredBy: 'com.as3long.node.utils.Debug'}
      };
    }
  };
};